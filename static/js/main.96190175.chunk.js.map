{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["imageContainer","position","display","imageCanvas","captureBtn","border","borderRadius","width","height","background","top","left","transform","cursor","props","userMediaConfig","useState","playerRef","createRef","canvasRef","tracks","useRef","useEffect","navigator","stream","timeout","setTimeout","setStreaming","error","onError","clearTimeout","captureImage","useCallback","imageWidth","imageHeight","context","webPData","blob","onCapture","webP","file","File","Date","style","ref","autoPlay","streaming","onClick","App","config","useMemo","video","imgSrc","setImgSrc","imgFile","setImgFile","console","log","FormData","append","imageData","src","alt","ReactDOM","render","document","getElementById"],"mappings":"kNAIMA,EAAiB,CACnBC,SADmB,WAEnBC,QAAS,gBAEPC,EAAc,CAChBD,QAAS,QAEPE,EAAa,CACfC,OADe,kBAEfC,aAFe,MAGfC,MAHe,OAIfC,OAJe,OAKfC,WALe,YAMfR,SANe,WAOfS,IAPe,MAQfC,KARe,MASfC,UATe,wBAUfC,OAAQ,W,MAGZ,SAAsBC,GAAO,IACnB,EAAN,EAAM,YAAN,EAAM,UAAN,EAAM,MAA6BC,EAAnC,EAAmCA,gBADV,EAESC,oBAAlC,GAFyB,mBAEnB,EAFmB,KAEnB,EAFmB,KAGnBC,EAAYC,sBACZC,EAAYD,sBACZE,EAASC,mBACfC,qBAAU,WACN,MAUA,OATAC,6CAEWC,YACHP,sBACAG,UAAiBI,EAAjBJ,YACAK,EAAUC,YAAW,kBAAMC,GAAP,KAApBF,QALRF,OAMaK,YACL,GAAaC,QAEd,WACH,GAAaC,mBAElB,CAACD,EAdJP,IAgBAA,qBAAU,WACN,OAAO,WAECF,EAAJ,SACIA,uBAJZE,IASA,IAAMS,EAAeC,uBAAY,WAC7B,IAAMC,EAAahB,UAAnB,YACMiB,EAAcjB,UAApB,aAFmC,EAGmB,CAACgB,EAAvD,GAIA,GAJCd,UAAD,MAHmC,KAGTA,UAA1B,OAHmC,KAInBA,qBAAhB,MACAgB,UAAkBlB,EAAlBkB,iBAEA,EAAe,CACX,IAAMC,EAAWjB,oBAAjB,cACAA,kBAA0BkB,YACtBC,EAAU,CAAED,OAAME,KAAR,EAAwBC,KAAM,IAAIC,KAAK,CAAT,cAAwB,IAAIC,MAA5B,2BAGjD,CAACJ,EAAWnB,EAbf,IAeA,OACI,yBAAKwB,MAAO3C,GACR,2BAAO4C,IAAP,EAAuBC,UAAvB,EAAgCtC,MAAOA,IACtCuC,GACG,kCACI,yBAAKH,MAAL,EAAwBI,QAAShB,IACjC,4BAAQY,MAAR,EAA4BC,IAAKzB,OClCtC6B,EAtCH,WACV,IAAMC,EAASC,mBAAQ,iBAAO,CAAEC,OAAO,KAAS,IADhC,EAEYnC,mBAAS,MAFrB,mBAEToC,EAFS,KAEDC,EAFC,OAGcrC,mBAAS,MAHvB,mBAGTsC,EAHS,KAGAC,EAHA,KAYV1B,EAAUG,uBAAY,SAACJ,GAC3B4B,QAAQC,IAAI7B,KACX,IAMH,OAHiB,IAAI8B,UACZC,OAAO,OAAQL,GAGtB,oCACE,kBAAC,EAAD,CACEhB,UAnBY,SAACsB,GAEjBP,EAAUO,EAAUrB,MAEpBgB,EAAWK,EAAUpB,OAgBjBX,QAASA,EACTtB,MAAO,IACPQ,gBAAiBkC,IAElBG,GACC,6BACE,gDACA,yBAAKS,IAAKT,EAAQU,IAAI,oBC7BhCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.96190175.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { createRef, useCallback } from 'react';\n\nconst imageContainer = {\n    position: 'relative',\n    display: 'inline-block'\n};\nconst imageCanvas = {\n    display: 'none'\n};\nconst captureBtn = {\n    border: '1px solid white',\n    borderRadius: '50%',\n    width: '50px',\n    height: '50px',\n    background: '#f7473587',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    cursor: 'pointer'\n}\n\nfunction ImageCapture(props) {\n    const { onCapture, onError, width, userMediaConfig } = props;\n    const [streaming, setStreaming] = useState(false);\n    const playerRef = createRef();\n    const canvasRef = createRef();\n    const tracks = useRef();\n    useEffect(() => {\n        let timeout;\n        navigator.mediaDevices\n            .getUserMedia(userMediaConfig)\n            .then((stream) => {\n                playerRef.current.srcObject = stream;\n                tracks.current = stream.getTracks();\n                timeout = setTimeout(() => setStreaming(true), 2000);\n            }).catch(error => {\n                if (onError) onError(error);\n            });\n        return () => {\n            if (timeout) clearTimeout(timeout);\n        };\n    }, [onError, userMediaConfig]);\n\n    useEffect(() => {\n        return () => {\n            // Stop the camera stream\n            if (tracks.current) {\n                tracks.current[0].stop();\n            }\n        };\n    }, []);\n\n    const captureImage = useCallback(() => {\n        const imageWidth = playerRef.current.offsetWidth;\n        const imageHeight = playerRef.current.offsetHeight;\n        [canvasRef.current.width, canvasRef.current.height] = [imageWidth, imageHeight];\n        const context = canvasRef.current.getContext('2d');\n        context.drawImage(playerRef.current, 0, 0, imageWidth, imageHeight);\n        // Trigger the callback function\n        if (onCapture) {\n            const webPData = canvasRef.current.toDataURL('image/webp');\n            canvasRef.current.toBlob((blob) => {\n                onCapture({ blob, webP: webPData, file: new File([webPData], `${new Date().getTime()}.png`) });\n            });\n        }\n    }, [onCapture, canvasRef, playerRef]);\n\n    return (\n        <div style={imageContainer}>\n            <video ref={playerRef} autoPlay width={width}></video>\n            {streaming &&\n                <Fragment>\n                    <div style={captureBtn} onClick={captureImage} />\n                    <canvas style={imageCanvas} ref={canvasRef} />\n                </Fragment>\n            }\n        </div>\n    );\n}\n\nexport default ImageCapture;\n","import React, { useState, useCallback, useMemo } from \"react\";\n\nimport ImageCapture from \"react-image-data-capture\";\n\nconst App = () => {\n  const config = useMemo(() => ({ video: true }), []);\n  const [imgSrc, setImgSrc] = useState(null);\n  const [imgFile, setImgFile] = useState(null);\n  const onCapture = (imageData) => {\n    // read as webP\n    setImgSrc(imageData.webP);\n    // read as file\n    setImgFile(imageData.file);\n    // read as blob\n    // imageData.blob\n  };\n  const onError = useCallback((error) => {\n    console.log(error);\n  }, []);\n\n  // imgFile can be used as a file upload field form submission\n  const formData = new FormData();\n  formData.append(\"file\", imgFile);\n\n  return (\n    <>\n      <ImageCapture\n        onCapture={onCapture}\n        onError={onError}\n        width={300}\n        userMediaConfig={config}\n      />\n      {imgSrc && (\n        <div>\n          <div>Captured Image:</div>\n          <img src={imgSrc} alt=\"captured-img\" />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}